import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { BookOpen, Trophy, Target, Users, Lightbulb, Award, TrendingDown, Star, GraduationCap, Globe } from 'lucide-react';
import { useCarbonData } from '../context/CarbonDataContext';

const EducationMode = () => {
  const { state } = useCarbonData();
  const [userLevel, setUserLevel] = useState(1);
  const [experience, setExperience] = useState(250);
  const [completedChallenges, setCompletedChallenges] = useState([]);
  const [currentStreak, setCurrentStreak] = useState(5);

  const challenges = [
    {
      id: 1,
      title: "Reduce Electricity by 10%",
      description: "Cut your electricity consumption by 10% this month",
      category: "energy",
      difficulty: "Easy",
      points: 50,
      icon: <Target className="w-5 h-5" />,
      progress: 0,
      target: 10,
      unit: "%"
    },
    {
      id: 2,
      title: "Use Public Transport",
      description: "Take public transport for 5 days this week",
      category: "transport",
      difficulty: "Medium",
      points: 75,
      icon: <Users className="w-5 h-5" />,
      progress: 0,
      target: 5,
      unit: "days"
    },
    {
      id: 3,
      title: "Zero Waste Week",
      description: "Generate less than 2kg of waste this week",
      category: "waste",
      difficulty: "Hard",
      points: 100,
      icon: <TrendingDown className="w-5 h-5" />,
      progress: 0,
      target: 2,
      unit: "kg"
    },
    {
      id: 4,
      title: "Energy Audit",
      description: "Complete a home energy audit and implement 3 improvements",
      category: "education",
      difficulty: "Medium",
      points: 80,
      icon: <Lightbulb className="w-5 h-5" />,
      progress: 0,
      target: 3,
      unit: "improvements"
    }
  ];

  const educationalContent = [
    {
      title: "What is Carbon Footprint?",
      content: "A carbon footprint is the total amount of greenhouse gases (including carbon dioxide and methane) that are generated by our actions. It's measured in units of carbon dioxide equivalents (CO₂e).",
      category: "basics",
      icon: <Globe className="w-6 h-6" />
    },
    {
      title: "Why Does It Matter?",
      content: "Greenhouse gases trap heat in Earth's atmosphere, causing global warming and climate change. By reducing our carbon footprint, we can help slow down these effects and protect our planet.",
      category: "impact",
      icon: <TrendingDown className="w-6 h-6" />
    },
    {
      title: "How to Calculate Emissions",
      content: "Emissions are calculated using emission factors - standard values that represent the amount of CO₂ released per unit of activity (like per kWh of electricity or per km traveled).",
      category: "calculation",
      icon: <Target className="w-6 h-6" />
    }
  ];

  const achievements = [
    {
      id: 1,
      title: "First Steps",
      description: "Complete your first challenge",
      icon: <Star className="w-8 h-8" />,
      unlocked: completedChallenges.length > 0
    },
    {
      id: 2,
      title: "Energy Saver",
      description: "Reduce electricity consumption by 20%",
      icon: <Lightbulb className="w-8 h-8" />,
      unlocked: false
    },
    {
      id: 3,
      title: "Green Commuter",
      description: "Use public transport for 10 days",
      icon: <Users className="w-8 h-8" />,
      unlocked: false
    },
    {
      id: 4,
      title: "Waste Warrior",
      description: "Achieve zero waste for a week",
      icon: <TrendingDown className="w-8 h-8" />,
      unlocked: false
    }
  ];

  const formatEmissions = (value) => {
    if (value >= 1000) {
      return `${(value / 1000).toFixed(1)} tons`;
    }
    return `${value.toFixed(1)} kg`;
  };

  const getLevelProgress = () => {
    const expNeeded = userLevel * 100;
    return Math.min(100, (experience / expNeeded) * 100);
  };

  const getDifficultyColor = (difficulty) => {
    switch (difficulty) {
      case 'Easy': return 'text-green-500 bg-green-100 dark:bg-green-900';
      case 'Medium': return 'text-yellow-500 bg-yellow-100 dark:bg-yellow-900';
      case 'Hard': return 'text-red-500 bg-red-100 dark:bg-red-900';
      default: return 'text-gray-500 bg-gray-100 dark:bg-gray-900';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="mb-8"
        >
          <div className="flex items-center space-x-3 mb-4">
            <GraduationCap className="w-8 h-8 text-eco-500" />
            <h1 className="text-3xl font-bold text-gray-900 dark:text-white">
              Education Mode
            </h1>
          </div>
          <p className="text-gray-600 dark:text-gray-300">
            Learn about sustainability and complete challenges to earn badges and level up!
          </p>
        </motion.div>

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.1 }}
            className="lg:col-span-2 space-y-6"
          >
            {/* User Progress */}
            <div className="card p-6">
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-xl font-semibold text-gray-900 dark:text-white">
                  Your Progress
                </h2>
                <div className="flex items-center space-x-2">
                  <Trophy className="w-5 h-5 text-yellow-500" />
                  <span className="text-sm font-medium text-gray-600 dark:text-gray-300">
                    Level {userLevel}
                  </span>
                </div>
              </div>
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span className="text-gray-600 dark:text-gray-300">Experience</span>
                    <span className="text-gray-900 dark:text-white">{experience} / {userLevel * 100} XP</span>
                  </div>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                    <motion.div
                      className="bg-eco-500 h-2 rounded-full"
                      initial={{ width: 0 }}
                      animate={{ width: `${getLevelProgress()}%` }}
                      transition={{ duration: 1, delay: 0.5 }}
                    />
                  </div>
                </div>
                <div className="grid grid-cols-2 gap-4">
                  <div className="text-center p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                    <div className="text-2xl font-bold text-blue-600 dark:text-blue-400">
                      {currentStreak}
                    </div>
                    <div className="text-sm text-gray-600 dark:text-gray-300">Day Streak</div>
                  </div>
                  <div className="text-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
                    <div className="text-2xl font-bold text-green-600 dark:text-green-400">
                      {completedChallenges.length}
                    </div>
                    <div className="text-sm text-gray-600 dark:text-gray-300">Challenges Completed</div>
                  </div>
                </div>
              </div>
            </div>

            {/* Current Carbon Footprint */}
            <div className="card p-6">
              <h2 className="text-xl font-semibold text-gray-900 dark:text-white mb-4">
                Your Carbon Footprint
              </h2>
              <div className="text-center">
                <div className="text-4xl font-bold text-eco-600 dark:text-eco-400 mb-2">
                  {formatEmissions(state.totalEmissions)}
                </div>
                <div className="text-gray-600 dark:text-gray-300 mb-4">
                  CO₂e this month
                </div>
                <div className="text-sm text-gray-500 dark:text-gray-400">
                  {state.totalEmissions < 1000 ? "Great job! Keep it up!" : "There's room for improvement!"}
                </div>
              </div>
            </div>

            {/* Educational Content */}
            <div className="card p-6">
              <div className="flex items-center space-x-2 mb-4">
                <BookOpen className="w-6 h-6 text-eco-500" />
                <h2 className="text-xl font-semibold text-gray-900 dark:text-white">
                  Learn About Sustainability
                </h2>
              </div>
              <div className="space-y-4">
                {educationalContent.map((item, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                    className="p-4 bg-gradient-to-r from-eco-50 to-ocean-50 dark:from-eco-900/20 dark:to-ocean-900/20 rounded-lg border border-eco-200 dark:border-eco-800"
                  >
                    <div className="flex items-start space-x-3">
                      <div className="text-eco-500 mt-1">{item.icon}</div>
                      <div>
                        <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
                          {item.title}
                        </h3>
                        <p className="text-gray-600 dark:text-gray-300 text-sm">
                          {item.content}
                        </p>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          </motion.div>

          {/* Sidebar */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="space-y-6"
          >
            {/* Challenges */}
            <div className="card p-6">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Available Challenges
              </h3>
              <div className="space-y-3">
                {challenges.map((challenge, index) => (
                  <motion.div
                    key={challenge.id}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                    className="p-3 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-600"
                  >
                    <div className="flex items-start justify-between mb-2">
                      <div className="flex items-center space-x-2">
                        <div className="text-eco-500">{challenge.icon}</div>
                        <h4 className="font-medium text-gray-900 dark:text-white text-sm">
                          {challenge.title}
                        </h4>
                      </div>
                      <span className={`text-xs px-2 py-1 rounded-full ${getDifficultyColor(challenge.difficulty)}`}>
                        {challenge.difficulty}
                      </span>
                    </div>
                    <p className="text-xs text-gray-600 dark:text-gray-300 mb-2">
                      {challenge.description}
                    </p>
                    <div className="flex items-center justify-between">
                      <span className="text-xs text-gray-500 dark:text-gray-400">
                        {challenge.points} points
                      </span>
                      <button className="text-xs bg-eco-500 text-white px-3 py-1 rounded hover:bg-eco-600 transition-colors">
                        Start
                      </button>
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>

            {/* Achievements */}
            <div className="card p-6">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Achievements
              </h3>
              <div className="grid grid-cols-2 gap-3">
                {achievements.map((achievement, index) => (
                  <motion.div
                    key={achievement.id}
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.5, delay: 0.4 + index * 0.1 }}
                    className={`text-center p-3 rounded-lg border ${
                      achievement.unlocked
                        ? 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800'
                        : 'bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-600'
                    }`}
                  >
                    <div className={`mx-auto mb-2 ${achievement.unlocked ? 'text-yellow-500' : 'text-gray-400'}`}>
                      {achievement.icon}
                    </div>
                    <h4 className={`text-xs font-medium mb-1 ${
                      achievement.unlocked ? 'text-gray-900 dark:text-white' : 'text-gray-500 dark:text-gray-400'
                    }`}>
                      {achievement.title}
                    </h4>
                    <p className={`text-xs ${
                      achievement.unlocked ? 'text-gray-600 dark:text-gray-300' : 'text-gray-400 dark:text-gray-500'
                    }`}>
                      {achievement.description}
                    </p>
                  </motion.div>
                ))}
              </div>
            </div>

            {/* Quick Tips */}
            <div className="card p-6">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Quick Tips
              </h3>
              <div className="space-y-3">
                <div className="flex items-start space-x-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0"></div>
                  <p className="text-sm text-gray-600 dark:text-gray-300">
                    Turn off lights when leaving a room
                  </p>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
                  <p className="text-sm text-gray-600 dark:text-gray-300">
                    Use reusable water bottles instead of plastic
                  </p>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="w-2 h-2 bg-purple-500 rounded-full mt-2 flex-shrink-0"></div>
                  <p className="text-sm text-gray-600 dark:text-gray-300">
                    Take shorter showers to save water and energy
                  </p>
                </div>
              </div>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  );
};

export default EducationMode;
